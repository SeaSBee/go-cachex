# CacheX Configuration Reference
# This file contains all available configuration options for the go-cachex library
# Only ONE store type can be configured at a time: memory, redis, ristretto, or layered

# =============================================================================
# GENERAL CACHE SETTINGS
# =============================================================================

# Default TTL for cache items (when not specified in operations)
default_ttl: 5m

# Maximum number of retries for failed operations
max_retries: 3

# Delay between retries (exponential backoff will be applied)
retry_delay: 100ms

# Serialization codec: "json" or "msgpack"
codec: "json"

# =============================================================================
# STORE CONFIGURATIONS (Choose ONE only)
# =============================================================================

# =============================================================================
# MEMORY STORE CONFIGURATION
# =============================================================================
memory:
  # Maximum number of items in cache
  max_size: 10000
  
  # Maximum memory usage in MB (approximate)
  max_memory_mb: 100
  
  # Default TTL for items
  default_ttl: 5m
  
  # How often to run cleanup of expired items
  cleanup_interval: 1m
  
  # Eviction policy: "lru", "lfu", or "ttl"
  eviction_policy: "lru"
  
  # Enable detailed statistics
  enable_stats: true

# =============================================================================
# REDIS STORE CONFIGURATION
# =============================================================================
redis:
  # Redis connection settings
  addr: "localhost:6379"
  password: ""
  db: 0
  
  # TLS configuration
  tls:
    enabled: false
    insecure_skip_verify: false
  
  # Connection pool settings
  pool_size: 10
  min_idle_conns: 5
  max_retries: 3
  
  # Timeout settings
  dial_timeout: 5s
  read_timeout: 3s
  write_timeout: 3s
  
  # Performance settings
  enable_pipelining: true
  enable_metrics: true
  
  # Health check settings
  health_check_interval: 30s
  health_check_timeout: 5s

# =============================================================================
# OPTIMIZED CONNECTION POOL CONFIGURATION
# =============================================================================
optimized_connection_pool:
  # Redis connection settings
  addr: "localhost:6379"
  password: ""
  db: 0
  
  # TLS configuration
  tls:
    enabled: false
    insecure_skip_verify: false
  
  # Advanced connection pool settings
  pool_size: 20
  min_idle_conns: 10
  max_retries: 3
  pool_timeout: 30s
  idle_timeout: 5m
  idle_check_frequency: 1m
  
  # Timeout settings
  dial_timeout: 5s
  read_timeout: 3s
  write_timeout: 3s
  
  # Performance settings
  enable_pipelining: true
  enable_metrics: true
  enable_connection_pool: true
  
  # Health check settings
  health_check_interval: 30s
  health_check_timeout: 5s
  
  # Connection pool optimization settings
  enable_connection_reuse: true
  enable_connection_warming: true
  connection_warming_timeout: 30s
  enable_load_balancing: false
  enable_circuit_breaker: false
  
  # Monitoring settings
  enable_pool_monitoring: true
  monitoring_interval: 1m

# =============================================================================
# RISTRETTO STORE CONFIGURATION
# =============================================================================
ristretto:
  # Maximum number of items in cache
  max_items: 10000
  
  # Maximum memory usage in bytes
  max_memory_bytes: 104857600  # 100MB
  
  # Default TTL for items
  default_ttl: 5m
  
  # Number of counters (should be 10x the number of items)
  num_counters: 100000
  
  # Buffer size for items
  buffer_items: 64
  
  # Enable metrics
  enable_metrics: true
  
  # Enable statistics
  enable_stats: true
  
  # Batch size for concurrent operations (MGet, MSet)
  batch_size: 10

# =============================================================================
# LAYERED STORE CONFIGURATION
# =============================================================================
layered:
  # Memory store configuration for L1 cache
  memory_config:
    max_size: 10000
    max_memory_mb: 100
    default_ttl: 5m
    cleanup_interval: 1m
    eviction_policy: "lru"
    enable_stats: true
  
  # L2 store configuration (optional - if not provided, will use default Redis)
  l2_store_config:
    type: "redis"  # "redis", "ristretto", or "memory"
    redis:
      addr: "localhost:6379"
      password: ""
      db: 0
      pool_size: 10
      enable_pipelining: true
    ristretto:
      max_items: 10000
      max_memory_bytes: 104857600
      default_ttl: 5m
    memory:
      max_size: 5000
      max_memory_mb: 50
      default_ttl: 2m
  
  # Layering behavior
  write_policy: "through"  # "through", "behind", or "around"
  read_policy: "through"   # "through", "aside", or "around"
  sync_interval: 5m
  
  # Performance tuning
  max_concurrent_sync: 10
  enable_stats: true
  
  # Timeout configurations
  async_operation_timeout: 30s
  background_sync_timeout: 60s

# =============================================================================
# OBSERVABILITY CONFIGURATION
# =============================================================================
observability:
  # Enable Prometheus metrics
  enable_metrics: true
  
  # Enable OpenTelemetry tracing
  enable_tracing: true
  
  # Enable structured logging
  enable_logging: true
  
  # Service information for observability
  service_name: "cachex"
  service_version: "1.0.0"
  environment: "production"
  
  # Log level for observability
  log_level: "info"
  
  # Metrics collection interval
  metrics_interval: 30s
  
  # Trace sampling rate (0.0 to 1.0)
  trace_sampling_rate: 0.1

# =============================================================================
# TAGGING CONFIGURATION
# =============================================================================
tagging:
  # Enable persistence of tag mappings
  enable_persistence: true
  
  # TTL for tag mappings
  tag_mapping_ttl: 24h
  
  # Batch size for tag operations
  batch_size: 100
  
  # Enable statistics
  enable_stats: true
  
  # Load timeout for tag mappings
  load_timeout: 5s

# =============================================================================
# OPTIMIZED TAGGING CONFIGURATION
# =============================================================================
optimized_tagging:
  # Enable persistence of tag mappings
  enable_persistence: true
  
  # TTL for tag mappings
  tag_mapping_ttl: 24h
  
  # Batch size for tag operations
  batch_size: 100
  
  # Enable statistics
  enable_stats: true
  
  # Load timeout for tag mappings
  load_timeout: 5s
  
  # Enable background persistence
  enable_background_persistence: true
  
  # Persistence interval for background operations
  persistence_interval: 30s
  
  # Enable memory optimization
  enable_memory_optimization: true
  
  # Maximum memory usage for tag mappings (in bytes)
  max_memory_usage: 104857600  # 100MB
  
  # Batch flush interval
  batch_flush_interval: 5s

# =============================================================================
# REFRESH AHEAD CONFIGURATION
# =============================================================================
refresh_ahead:
  # Enable refresh-ahead functionality
  enabled: true
  
  # Default refresh before TTL
  default_refresh_before: 1m
  
  # Maximum concurrent refresh operations
  max_concurrent_refreshes: 10
  
  # Refresh interval for background scanning
  refresh_interval: 30s
  
  # Enable distributed locking
  enable_distributed_lock: true
  
  # Lock timeout for refresh operations
  lock_timeout: 30s
  
  # Enable metrics
  enable_metrics: true
  
  # Default TTL for cache entries when TTL retrieval fails
  default_ttl: 5m
  
  # Unlock timeout for distributed lock operations
  unlock_timeout: 30s
  
  # Maximum consecutive failures before task cleanup
  max_consecutive_failures: 3
  
  # Maximum task age before cleanup
  max_task_age: 1h

# =============================================================================
# GORM INTEGRATION CONFIGURATION
# =============================================================================
gorm:
  # Enable automatic cache invalidation
  enable_invalidation: true
  
  # Enable read-through caching
  enable_read_through: true
  
  # Default TTL for cached items
  default_ttl: 5m
  
  # Enable query result caching
  enable_query_cache: true
  
  # Cache key prefix
  key_prefix: "gorm"
  
  # Enable debug logging
  enable_debug: false
  
  # Batch invalidation size
  batch_size: 100

# =============================================================================
# VALIDATION CACHE CONFIGURATION
# =============================================================================
validation_cache:
  # Enable validation caching
  enabled: true
  
  # Cache TTL for validation results
  ttl: 1h
  
  # Maximum cache size
  max_size: 1000
  
  # Enable statistics
  enable_stats: true
  
  # Cleanup interval
  cleanup_interval: 5m

# =============================================================================
# MEMORY POOL CONFIGURATION
# =============================================================================
memory_pool:
  # Enable memory pools
  enabled: true
  
  # Initial pool size
  initial_size: 100
  
  # Maximum pool size (0 = unlimited)
  max_size: 1000
  
  # Cleanup interval for unused items
  cleanup_interval: 5m
  
  # Enable statistics collection
  enable_stats: true

# =============================================================================
# ALLOCATION OPTIMIZATION CONFIGURATION
# =============================================================================
allocation_optimization:
  # Enable allocation optimization
  enabled: true
  
  # Enable memory pools
  enable_memory_pools: true
  
  # Enable buffer pooling
  enable_buffer_pooling: true
  
  # Enable string optimization
  enable_string_optimization: true
  
  # Enable map optimization
  enable_map_optimization: true
  
  # Enable value copy optimization
  enable_value_copy_optimization: true

# =============================================================================
# SECURITY CONFIGURATION
# =============================================================================
security:
  # Input validation settings
  validation:
    # Maximum key length
    max_key_length: 256
    
    # Maximum value size in bytes
    max_value_size: 1048576  # 1MB
    
    # Allowed key patterns (regex)
    allowed_patterns:
      - "^[a-zA-Z0-9:_-]+$"
    
    # Blocked key patterns (regex)
    blocked_patterns:
      - "^\.\./"           # Path traversal
      - "[<>\"'&]"         # HTML/XML injection
      - "javascript:"      # XSS
      - "data:text/html"   # XSS
  
  # Log redaction patterns (regex)
  redaction_patterns:
    - "password[\"\\s]*[:=][\"\\s]*[\"']?[^\"'\\s]+[\"']?"  # Passwords
    - "token[\"\\s]*[:=][\"\\s]*[\"']?[^\"'\\s]+[\"']?"     # Tokens
    - "key[\"\\s]*[:=][\"\\s]*[\"']?[^\"'\\s]+[\"']?"       # Keys
    - "secret[\"\\s]*[:=][\"\\s]*[\"']?[^\"'\\s]+[\"']?"    # Secrets
  
  # Replacement text for redacted content
  redaction_replacement: "[REDACTED]"
  
  # Prefix for secrets in environment variables
  secrets_prefix: "VAULT_"

# =============================================================================
# EXAMPLE CONFIGURATIONS
# =============================================================================

# Example 1: Simple Memory Cache
# Uncomment and use this for basic in-memory caching
# memory:
#   max_size: 1000
#   max_memory_mb: 50
#   default_ttl: 10m
#   eviction_policy: "lru"

# Example 2: High-Performance Redis Cache
# Uncomment and use this for production Redis caching
# redis:
#   addr: "redis-cluster:6379"
#   password: "your-redis-password"
#   pool_size: 50
#   enable_pipelining: true
#   tls:
#     enabled: true
#     insecure_skip_verify: false

# Example 3: Optimized Connection Pool
# Uncomment and use this for high-performance Redis with optimized connection pooling
# optimized_connection_pool:
#   addr: "redis-cluster:6379"
#   password: "your-redis-password"
#   pool_size: 100
#   min_idle_conns: 50
#   enable_connection_warming: true
#   enable_load_balancing: true
#   enable_circuit_breaker: true

# Example 4: High-Performance Ristretto Cache
# Uncomment and use this for high-performance in-memory caching
# ristretto:
#   max_items: 100000
#   max_memory_bytes: 1073741824  # 1GB
#   default_ttl: 10m
#   num_counters: 1000000
#   buffer_items: 128
#   batch_size: 20

# Example 5: Layered Cache (Memory + Redis)
# Uncomment and use this for multi-tier caching
# layered:
#   memory_config:
#     max_size: 5000
#     max_memory_mb: 100
#     default_ttl: 2m
#   write_policy: "behind"
#   read_policy: "through"
#   sync_interval: 1m

# Example 6: Optimized Tagging with Memory Management
# Uncomment and use this for high-throughput tagging
# optimized_tagging:
#   enable_persistence: true
#   batch_size: 200
#   enable_memory_optimization: true
#   max_memory_usage: 209715200  # 200MB
#   batch_flush_interval: 2s

# Example 7: Secure Cache with Validation
# Uncomment and use this for security-sensitive applications
# security:
#   validation:
#     max_key_length: 128
#     max_value_size: 524288  # 512KB
#     allowed_patterns:
#       - "^user:[0-9]+$"
#       - "^session:[a-zA-Z0-9]+$"
#     blocked_patterns:
#       - "^admin:"
#       - "javascript:"
#       - "data:text/html"

# =============================================================================
# ENVIRONMENT VARIABLE OVERRIDES
# =============================================================================
# The following environment variables can override YAML settings:

# CACHEX_STORE_TYPE=memory|redis|ristretto|layered
# CACHEX_DEFAULT_TTL=5m
# CACHEX_MAX_RETRIES=3
# CACHEX_RETRY_DELAY=100ms
# CACHEX_CODEC=json|msgpack

# Memory Store:
# CACHEX_MEMORY_MAX_SIZE=10000
# CACHEX_MEMORY_MAX_MEMORY_MB=100
# CACHEX_MEMORY_DEFAULT_TTL=5m
# CACHEX_MEMORY_CLEANUP_INTERVAL=1m
# CACHEX_MEMORY_EVICTION_POLICY=lru|lfu|ttl

# Redis Store:
# CACHEX_REDIS_ADDR=localhost:6379
# CACHEX_REDIS_PASSWORD=your-password
# CACHEX_REDIS_DB=0
# CACHEX_REDIS_POOL_SIZE=10
# CACHEX_REDIS_MIN_IDLE_CONNS=5
# CACHEX_REDIS_MAX_RETRIES=3
# CACHEX_REDIS_DIAL_TIMEOUT=5s
# CACHEX_REDIS_READ_TIMEOUT=3s
# CACHEX_REDIS_WRITE_TIMEOUT=3s
# CACHEX_REDIS_TLS_ENABLED=false
# CACHEX_REDIS_TLS_INSECURE_SKIP_VERIFY=false
# CACHEX_REDIS_ENABLE_PIPELINING=true
# CACHEX_REDIS_ENABLE_METRICS=true
# CACHEX_REDIS_HEALTH_CHECK_INTERVAL=30s
# CACHEX_REDIS_HEALTH_CHECK_TIMEOUT=5s

# Ristretto Store:
# CACHEX_RISTRETTO_MAX_ITEMS=10000
# CACHEX_RISTRETTO_MAX_MEMORY_BYTES=104857600
# CACHEX_RISTRETTO_DEFAULT_TTL=5m
# CACHEX_RISTRETTO_NUM_COUNTERS=100000
# CACHEX_RISTRETTO_BUFFER_ITEMS=64
# CACHEX_RISTRETTO_ENABLE_METRICS=true
# CACHEX_RISTRETTO_ENABLE_STATS=true
# CACHEX_RISTRETTO_BATCH_SIZE=10

# Layered Store:
# CACHEX_LAYERED_READ_POLICY=through|aside|around
# CACHEX_LAYERED_WRITE_POLICY=through|behind|around
# CACHEX_LAYERED_SYNC_INTERVAL=5m
# CACHEX_LAYERED_MAX_CONCURRENT_SYNC=10
# CACHEX_LAYERED_ENABLE_STATS=true
# CACHEX_LAYERED_ASYNC_OPERATION_TIMEOUT=30s
# CACHEX_LAYERED_BACKGROUND_SYNC_TIMEOUT=60s

# Observability:
# CACHEX_OBSERVABILITY_ENABLE_METRICS=true
# CACHEX_OBSERVABILITY_ENABLE_TRACING=true
# CACHEX_OBSERVABILITY_ENABLE_LOGGING=true
# CACHEX_OBSERVABILITY_SERVICE_NAME=cachex
# CACHEX_OBSERVABILITY_SERVICE_VERSION=1.0.0
# CACHEX_OBSERVABILITY_ENVIRONMENT=production
# CACHEX_OBSERVABILITY_LOG_LEVEL=info
# CACHEX_OBSERVABILITY_METRICS_INTERVAL=30s
# CACHEX_OBSERVABILITY_TRACE_SAMPLING_RATE=0.1

# Tagging:
# CACHEX_TAGGING_ENABLE_PERSISTENCE=true
# CACHEX_TAGGING_TAG_MAPPING_TTL=24h
# CACHEX_TAGGING_BATCH_SIZE=100
# CACHEX_TAGGING_ENABLE_STATS=true
# CACHEX_TAGGING_LOAD_TIMEOUT=5s

# Refresh Ahead:
# CACHEX_REFRESH_AHEAD_ENABLED=true
# CACHEX_REFRESH_AHEAD_DEFAULT_REFRESH_BEFORE=1m
# CACHEX_REFRESH_AHEAD_MAX_CONCURRENT_REFRESHES=10
# CACHEX_REFRESH_AHEAD_REFRESH_INTERVAL=30s
# CACHEX_REFRESH_AHEAD_ENABLE_DISTRIBUTED_LOCK=true
# CACHEX_REFRESH_AHEAD_LOCK_TIMEOUT=30s
# CACHEX_REFRESH_AHEAD_ENABLE_METRICS=true
# CACHEX_REFRESH_AHEAD_DEFAULT_TTL=5m
# CACHEX_REFRESH_AHEAD_UNLOCK_TIMEOUT=30s
# CACHEX_REFRESH_AHEAD_MAX_CONSECUTIVE_FAILURES=3
# CACHEX_REFRESH_AHEAD_MAX_TASK_AGE=1h

# GORM Integration:
# CACHEX_GORM_ENABLE_INVALIDATION=true
# CACHEX_GORM_ENABLE_READ_THROUGH=true
# CACHEX_GORM_DEFAULT_TTL=5m
# CACHEX_GORM_ENABLE_QUERY_CACHE=true
# CACHEX_GORM_KEY_PREFIX=gorm
# CACHEX_GORM_ENABLE_DEBUG=false
# CACHEX_GORM_BATCH_SIZE=100
