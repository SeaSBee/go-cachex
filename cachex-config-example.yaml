# CacheX Example Configuration
# Copy this file and modify it according to your needs

# =============================================================================
# BASIC CONFIGURATION
# =============================================================================

# Default TTL for cache items
default_ttl: 10m

# Maximum number of retries for failed operations
max_retries: 3

# Delay between retries
retry_delay: 100ms

# Serialization codec (json or msgpack)
codec: "json"

# =============================================================================
# STORE CONFIGURATION (Choose ONE)
# =============================================================================

# Option 1: Simple Memory Cache (for development/testing)
memory:
  max_size: 1000
  max_memory_mb: 50
  default_ttl: 5m
  cleanup_interval: 1m
  eviction_policy: "lru"
  enable_stats: true

# Option 2: Redis Cache (for production)
# Uncomment and configure for Redis
# redis:
#   addr: "localhost:6379"
#   password: ""
#   db: 0
#   pool_size: 10
#   min_idle_conns: 5
#   max_retries: 3
#   dial_timeout: 5s
#   read_timeout: 3s
#   write_timeout: 3s
#   enable_pipelining: true
#   enable_metrics: true
#   health_check_interval: 30s
#   health_check_timeout: 5s
#   tls:
#     enabled: false
#     insecure_skip_verify: false

# Option 3: Optimized Connection Pool (for high-performance Redis)
# Uncomment and configure for optimized Redis connection pooling
# optimized_connection_pool:
#   addr: "redis-cluster:6379"
#   password: "your-redis-password"
#   db: 0
#   pool_size: 50
#   min_idle_conns: 20
#   max_retries: 5
#   pool_timeout: 30s
#   idle_timeout: 5m
#   idle_check_frequency: 1m
#   dial_timeout: 5s
#   read_timeout: 1s
#   write_timeout: 1s
#   enable_pipelining: true
#   enable_metrics: true
#   enable_connection_pool: true
#   health_check_interval: 15s
#   health_check_timeout: 2s
#   enable_connection_reuse: true
#   enable_connection_warming: true
#   connection_warming_timeout: 30s
#   enable_load_balancing: true
#   enable_circuit_breaker: true
#   enable_pool_monitoring: true
#   monitoring_interval: 1m

# Option 4: High-Performance Ristretto Cache
# Uncomment and configure for Ristretto
# ristretto:
#   max_items: 10000
#   max_memory_bytes: 104857600  # 100MB
#   default_ttl: 5m
#   num_counters: 100000
#   buffer_items: 64
#   enable_metrics: true
#   enable_stats: true
#   batch_size: 10

# Option 5: Layered Cache (Memory + Redis)
# Uncomment and configure for multi-tier caching
# layered:
#   memory_config:
#     max_size: 5000
#     max_memory_mb: 100
#     default_ttl: 2m
#     cleanup_interval: 1m
#     eviction_policy: "lru"
#     enable_stats: true
#   l2_store_config:
#     type: "redis"
#     redis:
#       addr: "localhost:6379"
#       pool_size: 10
#       enable_pipelining: true
#   write_policy: "behind"
#   read_policy: "through"
#   sync_interval: 1m
#   max_concurrent_sync: 10
#   enable_stats: true
#   async_operation_timeout: 30s
#   background_sync_timeout: 60s

# =============================================================================
# OBSERVABILITY (Optional)
# =============================================================================

# Enable metrics, tracing, and logging
observability:
  enable_metrics: true
  enable_tracing: true
  enable_logging: true
  service_name: "my-app"
  service_version: "1.0.0"
  environment: "production"
  log_level: "info"
  metrics_interval: 30s
  trace_sampling_rate: 0.1

# =============================================================================
# TAGGING (Optional)
# =============================================================================

# Standard tagging support
# tagging:
#   enable_persistence: true
#   tag_mapping_ttl: 24h
#   batch_size: 100
#   enable_stats: true
#   load_timeout: 5s

# Optimized tagging with memory management (for high-throughput)
# optimized_tagging:
#   enable_persistence: true
#   tag_mapping_ttl: 24h
#   batch_size: 200
#   enable_stats: true
#   load_timeout: 5s
#   enable_background_persistence: true
#   persistence_interval: 30s
#   enable_memory_optimization: true
#   max_memory_usage: 209715200  # 200MB
#   batch_flush_interval: 2s

# =============================================================================
# REFRESH AHEAD (Optional)
# =============================================================================

# Refresh-ahead caching for proactive cache updates
# refresh_ahead:
#   enabled: true
#   default_refresh_before: 1m
#   max_concurrent_refreshes: 10
#   refresh_interval: 30s
#   enable_distributed_lock: true
#   lock_timeout: 30s
#   enable_metrics: true
#   default_ttl: 5m
#   unlock_timeout: 30s
#   max_consecutive_failures: 3
#   max_task_age: 1h

# =============================================================================
# GORM INTEGRATION (Optional)
# =============================================================================

# GORM integration for automatic cache invalidation
# gorm:
#   enable_invalidation: true
#   enable_read_through: true
#   default_ttl: 5m
#   enable_query_cache: true
#   key_prefix: "gorm"
#   enable_debug: false
#   batch_size: 100

# =============================================================================
# MEMORY POOL OPTIMIZATION (Optional)
# =============================================================================

# Memory pool configuration for performance optimization
# memory_pool:
#   enabled: true
#   initial_size: 100
#   max_size: 1000
#   cleanup_interval: 5m
#   enable_stats: true

# =============================================================================
# ALLOCATION OPTIMIZATION (Optional)
# =============================================================================

# Allocation optimization for high-performance scenarios
# allocation_optimization:
#   enabled: true
#   enable_memory_pools: true
#   enable_buffer_pooling: true
#   enable_string_optimization: true
#   enable_map_optimization: true
#   enable_value_copy_optimization: true

# =============================================================================
# VALIDATION CACHE (Optional)
# =============================================================================

# Validation cache for improved performance
# validation_cache:
#   enabled: true
#   ttl: 1h
#   max_size: 1000
#   enable_stats: true
#   cleanup_interval: 5m

# =============================================================================
# SECURITY (Optional)
# =============================================================================

# Input validation and security features
# security:
#   validation:
#     max_key_length: 256
#     max_value_size: 1048576  # 1MB
#     allowed_patterns:
#       - "^[a-zA-Z0-9:_-]+$"
#     blocked_patterns:
#       - "^\.\./"
#       - "[<>\"'&]"
#       - "javascript:"
#       - "data:text/html"
#   redaction_patterns:
#     - "password[\"\\s]*[:=][\"\\s]*[\"']?[^\"'\\s]+[\"']?"
#     - "token[\"\\s]*[:=][\"\\s]*[\"']?[^\"'\\s]+[\"']?"
#     - "key[\"\\s]*[:=][\"\\s]*[\"']?[^\"'\\s]+[\"']?"
#     - "secret[\"\\s]*[:=][\"\\s]*[\"']?[^\"'\\s]+[\"']?"
#   redaction_replacement: "[REDACTED]"
#   secrets_prefix: "VAULT_"

# =============================================================================
# EXAMPLE SCENARIOS
# =============================================================================

# Scenario 1: Development Environment
# Use this configuration for local development
# memory:
#   max_size: 1000
#   max_memory_mb: 50
#   default_ttl: 5m
#   eviction_policy: "lru"
# observability:
#   enable_metrics: true
#   enable_logging: true
#   log_level: "debug"

# Scenario 2: Production Redis Cache
# Use this configuration for production Redis
# redis:
#   addr: "redis-cluster:6379"
#   password: "your-secure-password"
#   db: 0
#   pool_size: 50
#   min_idle_conns: 20
#   enable_pipelining: true
#   tls:
#     enabled: true
#     insecure_skip_verify: false
# observability:
#   enable_metrics: true
#   enable_tracing: true
#   service_name: "my-app"
#   environment: "production"

# Scenario 3: High-Performance In-Memory Cache
# Use this configuration for high-performance in-memory caching
# ristretto:
#   max_items: 100000
#   max_memory_bytes: 1073741824  # 1GB
#   default_ttl: 10m
#   num_counters: 1000000
#   buffer_items: 128
#   batch_size: 20
# observability:
#   enable_metrics: true
#   enable_stats: true

# Scenario 4: Multi-Tier Caching
# Use this configuration for multi-tier caching (L1: Memory, L2: Redis)
# layered:
#   memory_config:
#     max_size: 10000
#     max_memory_mb: 200
#     default_ttl: 1m
#     eviction_policy: "lru"
#   l2_store_config:
#     type: "redis"
#     redis:
#       addr: "redis-cluster:6379"
#       pool_size: 20
#       enable_pipelining: true
#   write_policy: "behind"
#   read_policy: "through"
#   sync_interval: 30s

# Scenario 5: High-Throughput Tagging
# Use this configuration for applications with heavy tagging
# optimized_tagging:
#   enable_persistence: true
#   batch_size: 500
#   enable_memory_optimization: true
#   max_memory_usage: 524288000  # 500MB
#   batch_flush_interval: 1s
#   enable_background_persistence: true

# Scenario 6: Secure Cache
# Use this configuration for security-sensitive applications
# security:
#   validation:
#     max_key_length: 128
#     max_value_size: 524288  # 512KB
#     allowed_patterns:
#       - "^user:[0-9]+$"
#       - "^session:[a-zA-Z0-9]+$"
#     blocked_patterns:
#       - "^admin:"
#       - "javascript:"
#       - "data:text/html"
#   redaction_patterns:
#     - "password[\"\\s]*[:=][\"\\s]*[\"']?[^\"'\\s]+[\"']?"
#     - "token[\"\\s]*[:=][\"\\s]*[\"']?[^\"'\\s]+[\"']?"

# =============================================================================
# ENVIRONMENT VARIABLES
# =============================================================================
# You can override any configuration using environment variables:

# Basic settings:
# export CACHEX_STORE_TYPE=memory
# export CACHEX_DEFAULT_TTL=10m
# export CACHEX_CODEC=json

# Redis settings:
# export CACHEX_REDIS_ADDR=localhost:6379
# export CACHEX_REDIS_PASSWORD=your-password
# export CACHEX_REDIS_POOL_SIZE=20

# Observability:
# export CACHEX_OBSERVABILITY_ENABLE_METRICS=true
# export CACHEX_OBSERVABILITY_SERVICE_NAME=my-app
# export CACHEX_OBSERVABILITY_ENVIRONMENT=production
